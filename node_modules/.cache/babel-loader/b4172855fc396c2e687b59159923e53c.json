{"ast":null,"code":"var _jsxFileName = \"/Users/libowen/Documents/web/assignment3/colored-reminder copy/src/Reminder.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nexport default class Reminder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = e => {\n      let title = this.title.value;\n      let tempList = this.state.list;\n\n      if (this.title.value == \"\") {\n        alert(\"please insert data\");\n      }\n\n      if (this.title.value != \"\") {\n        tempList.push({\n          title: title,\n          checked: false\n        });\n        this.setState({\n          list: tempList\n        });\n        this.title.value = \"\";\n        localStorage.setItem(\"list\", JSON.stringify(tempList));\n      }\n    };\n\n    this.changeCheck = key => {\n      let tempList = this.state.list;\n      tempList[key].checked = !tempList[key].checked;\n      this.setState({\n        list: tempList\n      });\n      localStorage.setItem(\"list\", JSON.stringify(tempList));\n    };\n\n    this.removeData = key => {\n      let tempList = this.state.list;\n      tempList.splice(key, 1);\n      this.setState({\n        list: tempList\n      });\n      localStorage.setItem(\"list\", JSON.stringify(tempList));\n    };\n\n    this.state = {\n      list: [// {\n        //   title: \"a\",\n        //   checked: true,\n        // },\n        // {\n        //   title: \"b\",\n        //   checked: false,\n        // },\n        // {\n        //   title: \"c\",\n        //   checked: false,\n        // },\n      ]\n    };\n  }\n\n  componentDidMount() {\n    var prelist = JSON.parse(localStorage.getItem(\"list\"));\n\n    if (prelist) {\n      this.setState({\n        list: prelist\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        background: `linear-gradient( 60deg, ${this.color1} , ${this.color2}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Reminder \"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: ref => this.title = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add\",\n      onClick: this.addData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Items To Do:\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"ul1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, this.state.list.map((value, key) => {\n      if (!value.checked) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeCheck.bind(this, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }), \" \", value.title, \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"delete\",\n          onClick: this.removeData.bind(this, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, \" \", \"X\", \" \"));\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Items Done:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"ul2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, this.state.list.map((value, key) => {\n      if (value.checked) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: value.checked,\n          onChange: this.changeCheck.bind(this, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }), \" \", value.title, \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"delete\",\n          onClick: this.removeData.bind(this, key),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }, \"X\"));\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/libowen/Documents/web/assignment3/colored-reminder copy/src/Reminder.js"],"names":["React","Component","Reminder","constructor","props","addData","e","title","value","tempList","state","list","alert","push","checked","setState","localStorage","setItem","JSON","stringify","changeCheck","key","removeData","splice","componentDidMount","prelist","parse","getItem","render","background","color1","color2","ref","map","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\n\n\nexport default class Reminder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        // {\n        //   title: \"a\",\n        //   checked: true,\n        // },\n        // {\n        //   title: \"b\",\n        //   checked: false,\n        // },\n        // {\n        //   title: \"c\",\n        //   checked: false,\n        // },\n      ],\n    };\n  }\n\n  addData = (e) => {\n    let title = this.title.value;\n    let tempList = this.state.list;\n\n    if (this.title.value == \"\") {\n      alert(\"please insert data\");\n    }\n\n    if (this.title.value != \"\") {\n      tempList.push({\n        title: title,\n        checked: false,\n      });\n\n      this.setState({\n        list: tempList,\n      });\n\n      this.title.value = \"\";\n\n      localStorage.setItem(\"list\", JSON.stringify(tempList));\n    }\n  };\n\n  changeCheck = (key) => {\n    let tempList = this.state.list;\n    tempList[key].checked = !tempList[key].checked;\n    this.setState({\n      list: tempList,\n    });\n    localStorage.setItem(\"list\", JSON.stringify(tempList));\n  };\n\n  removeData = (key) => {\n    let tempList = this.state.list;\n    tempList.splice(key, 1);\n    this.setState({\n      list: tempList,\n    });\n    localStorage.setItem(\"list\", JSON.stringify(tempList));\n  };\n\n  componentDidMount() {\n    var prelist = JSON.parse(localStorage.getItem(\"list\"));\n\n    if (prelist) {\n      this.setState({\n        list: prelist,\n      });\n    }\n   \n  }\n\n  render() {\n    return (\n      <div\n        className=\"container\"\n        style={{\n          background: `linear-gradient( 60deg, ${this.color1} , ${this.color2}`,\n        }}\n      >\n       \n        <header>\n          <div className=\"title\">Reminder </div>\n          <input ref={(ref) => (this.title = ref)} />\n          <button className=\"add\" onClick={this.addData}>\n            +\n          </button>\n        </header>\n\n        <div className=\"items\">\n          <h2 className=\"todo\">Items To Do:</h2>\n          <hr />\n          <ul class=\"ul1\">\n            {this.state.list.map((value, key) => {\n              if (!value.checked) {\n                return (\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      checked={value.checked}\n                      onChange={this.changeCheck.bind(this, key)}\n                    />{\" \"}\n                    {value.title}{\" \"}\n                    <button\n                      className=\"delete\"\n                      onClick={this.removeData.bind(this, key)}\n                    >\n                      {\" \"}\n                      X{\" \"}\n                    </button>\n                  </li>\n                );\n              }\n            })}\n          </ul>\n        </div>\n\n        <div className=\"items\">\n          <h2 className=\"done\">Items Done:</h2>\n          <br />\n          <hr />\n          <br />\n          <ul className=\"ul2\">\n            {this.state.list.map((value, key) => {\n              if (value.checked) {\n                return (\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      checked={value.checked}\n                      onChange={this.changeCheck.bind(this, key)}\n                    />{\" \"}\n                    {value.title}{\" \"}\n                    <button\n                      className=\"delete\"\n                      onClick={this.removeData.bind(this, key)}\n                    >\n                      X\n                    </button>\n                  </li>\n                );\n              }\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}